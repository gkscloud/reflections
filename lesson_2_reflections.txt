What happens when you initialize a repository? Why do you need to do it?
When you init a repository, it tells git to keep track of all the files in that directory from that point on.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It helps to keep track of uncommitted changes ?
it gives you a chance to undo something before you commit
it saves you the trouble of having to create a new commit when you have some files ready but not all
maybe you want to work on only a few files at a time, then pool them together for a big commit

How can you use the staging area to make sure you have one commit per logical change?
you can add files that have changed as part of the logical change to the staging area. Then commit all of them together as part of the logical change. 
multiple files may have been modified. But only one commit is registered against that particular change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
when you need to fork the project and create something based on an existing project. a branch would help keep all the current code, and manage it separately
also good for experimenting
very good for isolating new feature development
helps keep it independent of the master to some extent
manage the development and deployment of fixes much better

How do the diagrams help you visualize the branch structure?


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
merge two branches combined all the changes to code from both branches to a single branch - master. 